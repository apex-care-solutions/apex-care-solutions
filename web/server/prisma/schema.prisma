generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ContactMethod {
  EMAIL
  PHONE
  SMS
  NONE
}

model User {
  id              Int             @id @default(autoincrement())
  firstName       String
  lastName        String
  phone           String
  email           String
  requests        JobRequest[]
  subscriptions   Subscription[]
  preferredContact ContactMethod  @default(EMAIL)
}

model JobRequest {
  id              Int             @id @default(autoincrement())
  type            String
  service         String
  location        String
  priority        String
  userId          Int
  jobs            Job[]
  requestMessages RequestMessage[]
  user            User            @relation(fields: [userId], references: [id])

  @@index([userId])
}

model RequestMessage {
  id              Int             @id @default(autoincrement())
  content         String
  jobRequestId    Int
  request         JobRequest      @relation(fields: [jobRequestId], references: [id])

  @@index([jobRequestId])
}

model Job {
  id              Int             @id @default(autoincrement())
  jobRequestId    Int
  technicianId    Int
  jobStatuses     JobStatus[]
  reviews         Review[]
  technician      Technician      @relation(fields: [technicianId], references: [id])
  request         JobRequest      @relation(fields: [jobRequestId], references: [id])

  @@index([jobRequestId])
  @@index([technicianId])
}

model JobStatus {
  id              Int             @id @default(autoincrement())
  message         String
  status          String
  timestamp       DateTime        @default(now())
  jobId           Int
  job             Job             @relation(fields: [jobId], references: [id])

  @@index([jobId])
}

model Review {
  id              Int             @id @default(autoincrement())
  feedback        String
  rating          Int
  jobId           Int
  job             Job             @relation(fields: [jobId], references: [id])

  @@index([jobId])
}

model Technician {
  id              Int             @id @default(autoincrement())
  firstName       String
  lastName        String
  phone           String
  email           String
  location        String
  company         String
  jobs            Job[]
  technicianSkills TechnicianSkill[]
  preferredContact ContactMethod  @default(EMAIL)
}

model TechnicianSkill {
  id              Int             @id @default(autoincrement())
  technicianId    Int
  skillId         Int
  technician      Technician      @relation(fields: [technicianId], references: [id])
  skill           Skill           @relation(fields: [skillId], references: [id])

  @@index([technicianId])
  @@index([skillId])
}

model Skill {
  id              Int             @id @default(autoincrement())
  type            String
  description     String
  technicianSkills TechnicianSkill[]
}

model Subscription {
  id              Int             @id @default(autoincrement())
  dateSubscribed  DateTime        @default(now())
  userId          Int
  termId          Int
  packageId       Int
  user            User            @relation(fields: [userId], references: [id])
  term            Term            @relation(fields: [termId], references: [id])
  package         Package         @relation(fields: [packageId], references: [id])

  @@index([userId])
  @@index([termId])
  @@index([packageId])
}

model Term {
  id              Int             @id @default(autoincrement())
  term            String
  relevantRate    Float
  subscriptions   Subscription[]
}

model Package {
  id              Int             @id @default(autoincrement())
  description     String
  flatRate        Float
  services        PackageService[]
  promotions      PackagePromotion[]
  subscriptions   Subscription[]
}

model PackageService {
  id              Int             @id @default(autoincrement())
  packageId       Int
  serviceId       Int
  package         Package         @relation(fields: [packageId], references: [id])
  service         Service         @relation(fields: [serviceId], references: [id])

  @@index([packageId])
  @@index([serviceId])
}

model PackagePromotion {
  id              Int             @id @default(autoincrement())
  discount        Float
  validFrom       DateTime
  validTo         DateTime
  packageId       Int
  package         Package         @relation(fields: [packageId], references: [id])

  @@index([packageId])
}

model Service {
  id              Int             @id @default(autoincrement())
  name            String
  description     String
  packageServices PackageService[]
}
